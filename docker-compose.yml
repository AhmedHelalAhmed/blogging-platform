version: '3'

services:
    web:
        container_name: ${DOCKER_NAME}_web
        build:
            context: .
            args:
                user: ${USER}
                uid: ${UID}
        ports:
            - "80:80"
        volumes:
            - ./:/var/www/project
        depends_on:
            - database_server
    database_server:
        container_name: ${DOCKER_NAME}_database
        image: mysql:5.7.5
        ports:
            - "3306:3306"
        restart: always
        volumes:
            - ./storage/app/mysql:/var/lib/mysql
        command: --innodb-use-native-aio=0
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
            - SERVICE_NAME=mysql
    phpmyadmin:
        container_name: ${DOCKER_NAME}_phpmyadmin
        image: phpmyadmin/phpmyadmin
        restart: always
        ports:
            - "8080:80"
        depends_on:
            - database_server
        environment:
            PMA_HOST: database_server
            PMA_PORT: 3306
            PMA_USER: root
            PMA_PASSWORD: root
    cron:
        container_name: ${DOCKER_NAME}_cron
        build:
            context: .
            dockerfile: cron.dockerfile
        volumes:
            - ./:/var/www/project
    redis:
        container_name: ${DOCKER_NAME}_redis
        image: redis:alpine
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - ./storage/app/redis:/var/lib/redis
